Release Notes for 0.3.0
- Added log.overwrite option for log files
- Fixed log file logging
- Added process.priority option to set process priority on startup
- Fixed shutdown bug on service mode
- Added ability to write text to splash screen
- Fixes for splash screen loading in 64 bit mode
- Improved window attributes on splash screen 
- Further improvements to diagnostics
 
Things remaining for release:
	- update site (synch also)
	- testing
		- check service install
		- check eclipse dde
		-  

Misc
====

- Improve error messages for different types of startup isues:
	- cannot find old enough version (eg. require <1.5)
	- cannot find new enough version
	- need 64-bit version
	- launch the following when cannot find:
		ShellExecute(NULL,"open","http://www.java.com/en/download/manual.jsp",NULL,NULL,SW_SHOWNORMAL);
	- see here for customizing a messagebox to give further options:
		http://www.codeguru.com/cpp/w-p/win32/messagebox/article.php/c10873
    - option to enable/disable this feature
    
    notfound.title=
    notfound.message=
    notfound.ok.label=
    notfound.cancel.label=
    notfound.ok.url=
 
- Further enhancements to logging
	- option to specify markers for logging (or switch off)
	- log rolling after specified size
	- maybe integrate log4j - ie. add a logger factory on the log class?
	
Resources
=========

- implement set of SetTitle, SetVersion, AddJar, SetINI functions
    (instead of pecoff4j)
- implement loading of INI, splash, jars from exe resources DONE
- check launch4j and others for their format for storing jars in exe and
  try to be compatible
- add option to ini file whether overriding is allowed for embedded ini. DONE
- allow embedding of html to display if launcher cannot find appropriate
  java version
  	ShellExecute(..., "res://path.to.exe?")
- add an api for accessing arbitrary resources on an exe/module
- associate a file type with secondary (or other) icon embedded.

? Maybe integrate RCEDIT into winrun4j binary and remove existing run on itself
  features. Should be minimal size overhead and would add useful features.  

Splash Screen
=============

- allow user to write text to splash screen window DONE
- allow user to specify font and location of text DONE
- allow user to change splash image on the fly 
- allow user to store splash image in jar and specify via manifest
    (need a flag in INI: splash.searchManifest=true)
- add option to ini for initial setting of splash text:
	splash.text=Loading...
	splash.text.location=15,56
	splash.text.font=Arial
	splash.text.fontsize=14
	splash.text.rgb=23,56,12

Service Support
===============

- add checking for JVM hang
- automatically add -Xrs?
- 

Build/Release
=============

- build 64 bit console version DONE
- console version option to add "Press any key to continue..." at the end ??
- possibly split out win32 features from core executable
	* registry access
	* event log
	* resource access
	* shell api
	* possibly arbitrary function calls with callback support
	* implement a wrapper api over win32 functions (eg. dde, com?, 
	  shell)
- look at supporting an open source VM impl. possibly build a version that includes
  a VM (ie. statically link the VM to the executable). maybe jamvm.

OSGI Support
============

- create an osgi launcher. start with eclipse. embedded launcher for directory
  of jars with versions etc...
  equinox.application=org.boris.xlloop.dataservice.XLLoopDataService
  should create one for applications and one for services.    
- eclipse integration (run/debug winrun4j application)
- write an article about osgi service as windows service.
- create a bundle startup service + native filesystem listener for extra
  bundles that automatically get installed/started
  * probably need specific implementations for each osgi implementation...
 